// Base plugin adds configuration
// support and build<Configuration>
// and upload<Configuration> tasks.
apply plugin: "base"
apply plugin: "maven-publish"
 
// This is needed in case of downloading over SSL
System.setProperty("jsse.enableSNIExtension", "false")

// Version is the version of the
// company Gradle. This can be independent
// of the Gradle version.
version = "1.11.1"
group = "com.github.baleio.gradle"
 
ext {
    // Gradle version to use as template for
    // the custom Gradle distribution.
    gradleFilename = "gradle"
    gradleVersion = "1.11"
    gradleClassifier = "bin"
    gradleExtension = "zip"
    gradleDistributionBaseUrl = "http://services.gradle.org/distributions"

    companyName = "baleio"
}
 
task wrapper(type: Wrapper) {
    distributionUrl = "$gradleDistributionBaseUrl/$gradleFilename-$gradleVersion-$gradleClassifier.$gradleExtension"
}
 
task downloadGradle(type: DownloadGradle) {
    description "Download Gradle version from Gradle distributions website"
 
    gradleFilename project.gradleFilename
    gradleVersion project.gradleVersion
    gradleClassifier project.gradleClassifier
    gradleExtension project.gradleExtension
    gradleDownloadBase = project.gradleDistributionBaseUrl
    destinationDir file("$buildDir/gradle-downloads")
}
 
task companyGradleZip(type: Zip, dependsOn: downloadGradle) {
    description "Add extra files to company Gradle distribution"
 
    // Name for company Gradle ZIP distribution.
    baseName = "$companyName-$gradleFilename"
    classifier = project.gradleClassifier
 
    from zipTree(downloadGradle.destinationFile)
    into("${downloadGradle.distributionNameBase}") {
        into("init.d") {
            from "src/main/scripts/init.d"
        }
        // We can do extra stuff here
        // to add to the company Gradle
        // distribution ZIP file.
    }   
}
 
publishing {
    publications {
        maven(MavenPublication) {
             artifact(companyGradleZip) {
                 extension "zip"
                 classifier "$gradleClassifier"
             }     
        }
    }

    repositories {
        maven {
            credentials {
                username "$repoUsername"
                password "$repoPassword"
            }

            if (project.version.endsWith("-SNAPSHOT")) {
                url "$snapshotRepoUrl"
            } else {
                url "$repoUrl"
            }
        }
    }
}


class DownloadGradle extends DefaultTask {
    @Input
    String gradleFilename

    @Input
    String gradleVersion

    @Input
    String gradleClassifier

    @Input
    String gradleExtension
 
    @Input
    String gradleDownloadBase = "http://services.gradle.org/distributions"
 
    @Input
    File destinationDir


    @TaskAction
    doDownloadGradle() {
        destinationFile.bytes = new URL(downloadUrl).bytes
    }
 
    String getDownloadUrl() {
        "$gradleDownloadBase/$downloadFileName"
    }
 
    String getDistributionNameBase() {
        "$gradleFilename-$gradleVersion"
    }
 
    String getDownloadFileName() {
        "$distributionNameBase-$gradleClassifier.$gradleExtension"
    }
 
    @OutputFile
    File getDestinationFile() {
        new File(destinationDir, downloadFileName)
    }
}
